<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ajacker.dao.IUserDao">

    <!--配置查询所有-->
    <select id="findAll" resultType="com.ajacker.domain.User">
        select * from user
    </select>

    <!--保存用户-->
    <insert id="saveUser" parameterType="com.ajacker.domain.User">
        <!--配置插入后获得插入用户的id,Property对应属性，Column对应数据库列名-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(username, address, sex, birthday) values(#{username},#{address},#{sex},#{birthday})
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="com.ajacker.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{uid}
    </delete>

    <!--根据id查询用户-->
    <select id="findById" parameterType="int" resultType="com.ajacker.domain.User">
        select * from user where id=#{uid}
    </select>

    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="string" resultType="com.ajacker.domain.User">
        select * from user where username like #{uname}
    </select>

    <!--获取总用户数-->
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>

    <!--根据QueryVo条件查询-->
    <select id="findUserByVo" parameterType="com.ajacker.domain.QueryVo" resultType="com.ajacker.domain.User">
        select * from user where username like #{user.username}
    </select>


    <!--传入map保存用户-->
    <update id="saveUserUseMap" parameterType="map">
        insert into user(username, address, sex, birthday) values(#{userId},#{userAds},#{userSex},#{userBirth})
    </update>
</mapper>